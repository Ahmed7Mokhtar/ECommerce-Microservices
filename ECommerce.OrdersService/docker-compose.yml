services:
  orders-microservice:
    image: orders-microservice
    build:
      context: .
      dockerfile: OrdersService.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MONGODB_HOST=mongodb-container
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=OrdersDatabase
      - UsersMicroserviceName=users-microservice
      - UsersMicroservicePort=9090
      - ProductsMicroserviceName=products-microservice
      - ProductsMicroservicePort=8080
    ports:
      - "7000:8080"
    networks:
      - orders-mongodb-network
      - ecommerce-network
    depends_on:
      - mongodb-container
      - products-microservice   # Added this for conflict resolution

  mongodb-container:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ../mongo-init:/docker-entrypoint-initdb.d
    networks:
      - orders-mongodb-network

  products-microservice:
    image: products-microservice:latest
    environment:
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_ENVIRONMENT=Development
      - MYSQL_HOST=mysql-container
      - MYSQL_PASSWORD=sa123
      - MYSQL_DATABASE=ecommerceproductsdatabase
      - MYSQL_PORT=3306         # - Container port not the host port
      - MYSQL_USER=root
    ports:
      - "6000:8080"
    networks:
      - products-mysql-network
      - ecommerce-network
    depends_on:
      - mysql-container

  mysql-container:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=sa123
    ports:
      - "3307:3306"
    volumes:
      - ../mysql-init:/docker-entrypoint-initdb.d
    networks:
      - products-mysql-network

  users-microservice:
    image: users-microservice:latest
    environment:
      - ASPNETCORE_HTTP_PORTS=9090
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_HOST=postgres-container
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=sa123
      - POSTGRES_DATABASE=eCommerceUsers
      - POSTGRES_USER=postgres    
    ports:
      - "5000:9090" # will not respect ASPNETCORE_HTTP_PORTS (see appsetting.json of users microservice)
    networks:
      - users-postgres-network
      - ecommerce-network
    depends_on:
      - postgres-container
      - products-microservice   # Added this for conflict resolution

  postgres-container:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=sa123
      - POSTGRES_DB=eCommerceUsers
    ports:
      - "5433:5432"
    volumes:
      - ../postgres-init:/docker-entrypoint-initdb.d
    networks:
      - users-postgres-network

networks:
  orders-mongodb-network:
    driver: bridge
  products-mysql-network:
    driver: bridge
  users-postgres-network:
    driver: bridge
  ecommerce-network:  # common network for all services
    driver: bridge

